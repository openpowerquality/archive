// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OpqProtocol.proto

#ifndef PROTOBUF_OpqProtocol_2eproto__INCLUDED
#define PROTOBUF_OpqProtocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_OpqProtocol_2eproto();
void protobuf_AssignDesc_OpqProtocol_2eproto();
void protobuf_ShutdownFile_OpqProtocol_2eproto();

class OpqPacket;
class OpqPacket_Event;
class OpqPacket_Heartbeat;
class OpqPacket_Cmd;
class OpqPacket_CmdResp;
class OpqPacket_DeviceId;

enum OpqPacket_EventType {
  OpqPacket_EventType_FREQUENCY = 0,
  OpqPacket_EventType_VOLTAGE = 1,
  OpqPacket_EventType_THD = 2
};
bool OpqPacket_EventType_IsValid(int value);
const OpqPacket_EventType OpqPacket_EventType_EventType_MIN = OpqPacket_EventType_FREQUENCY;
const OpqPacket_EventType OpqPacket_EventType_EventType_MAX = OpqPacket_EventType_THD;
const int OpqPacket_EventType_EventType_ARRAYSIZE = OpqPacket_EventType_EventType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpqPacket_EventType_descriptor();
inline const ::std::string& OpqPacket_EventType_Name(OpqPacket_EventType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpqPacket_EventType_descriptor(), value);
}
inline bool OpqPacket_EventType_Parse(
    const ::std::string& name, OpqPacket_EventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpqPacket_EventType>(
    OpqPacket_EventType_descriptor(), name, value);
}
enum OpqPacket_CmdType {
  OpqPacket_CmdType_KILL_SERVER = 0,
  OpqPacket_CmdType_RESTART_DEVICE = 1,
  OpqPacket_CmdType_GET_REGISTER_MAP = 2,
  OpqPacket_CmdType_RUN_DIAGNOSTICS = 3
};
bool OpqPacket_CmdType_IsValid(int value);
const OpqPacket_CmdType OpqPacket_CmdType_CmdType_MIN = OpqPacket_CmdType_KILL_SERVER;
const OpqPacket_CmdType OpqPacket_CmdType_CmdType_MAX = OpqPacket_CmdType_RUN_DIAGNOSTICS;
const int OpqPacket_CmdType_CmdType_ARRAYSIZE = OpqPacket_CmdType_CmdType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpqPacket_CmdType_descriptor();
inline const ::std::string& OpqPacket_CmdType_Name(OpqPacket_CmdType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpqPacket_CmdType_descriptor(), value);
}
inline bool OpqPacket_CmdType_Parse(
    const ::std::string& name, OpqPacket_CmdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpqPacket_CmdType>(
    OpqPacket_CmdType_descriptor(), name, value);
}
// ===================================================================

class OpqPacket_Event : public ::google::protobuf::Message {
 public:
  OpqPacket_Event();
  virtual ~OpqPacket_Event();

  OpqPacket_Event(const OpqPacket_Event& from);

  inline OpqPacket_Event& operator=(const OpqPacket_Event& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpqPacket_Event& default_instance();

  void Swap(OpqPacket_Event* other);

  // implements Message ----------------------------------------------

  inline OpqPacket_Event* New() const { return New(NULL); }

  OpqPacket_Event* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpqPacket_Event& from);
  void MergeFrom(const OpqPacket_Event& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpqPacket_Event* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OpqPacket.DeviceId id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::OpqPacket_DeviceId& id() const;
  ::OpqPacket_DeviceId* mutable_id();
  ::OpqPacket_DeviceId* release_id();
  void set_allocated_id(::OpqPacket_DeviceId* id);

  // optional int32 secondsSinceEpoch = 2;
  bool has_secondssinceepoch() const;
  void clear_secondssinceepoch();
  static const int kSecondsSinceEpochFieldNumber = 2;
  ::google::protobuf::int32 secondssinceepoch() const;
  void set_secondssinceepoch(::google::protobuf::int32 value);

  // optional int32 cyclcesSinceSecond = 3;
  bool has_cyclcessincesecond() const;
  void clear_cyclcessincesecond();
  static const int kCyclcesSinceSecondFieldNumber = 3;
  ::google::protobuf::int32 cyclcessincesecond() const;
  void set_cyclcessincesecond(::google::protobuf::int32 value);

  // optional .OpqPacket.EventType eventType = 4;
  bool has_eventtype() const;
  void clear_eventtype();
  static const int kEventTypeFieldNumber = 4;
  ::OpqPacket_EventType eventtype() const;
  void set_eventtype(::OpqPacket_EventType value);

  // repeated int32 waveform = 5;
  int waveform_size() const;
  void clear_waveform();
  static const int kWaveformFieldNumber = 5;
  ::google::protobuf::int32 waveform(int index) const;
  void set_waveform(int index, ::google::protobuf::int32 value);
  void add_waveform(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      waveform() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_waveform();

  // @@protoc_insertion_point(class_scope:OpqPacket.Event)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_secondssinceepoch();
  inline void clear_has_secondssinceepoch();
  inline void set_has_cyclcessincesecond();
  inline void clear_has_cyclcessincesecond();
  inline void set_has_eventtype();
  inline void clear_has_eventtype();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::OpqPacket_DeviceId* id_;
  ::google::protobuf::int32 secondssinceepoch_;
  ::google::protobuf::int32 cyclcessincesecond_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > waveform_;
  int eventtype_;
  friend void  protobuf_AddDesc_OpqProtocol_2eproto();
  friend void protobuf_AssignDesc_OpqProtocol_2eproto();
  friend void protobuf_ShutdownFile_OpqProtocol_2eproto();

  void InitAsDefaultInstance();
  static OpqPacket_Event* default_instance_;
};
// -------------------------------------------------------------------

class OpqPacket_Heartbeat : public ::google::protobuf::Message {
 public:
  OpqPacket_Heartbeat();
  virtual ~OpqPacket_Heartbeat();

  OpqPacket_Heartbeat(const OpqPacket_Heartbeat& from);

  inline OpqPacket_Heartbeat& operator=(const OpqPacket_Heartbeat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpqPacket_Heartbeat& default_instance();

  void Swap(OpqPacket_Heartbeat* other);

  // implements Message ----------------------------------------------

  inline OpqPacket_Heartbeat* New() const { return New(NULL); }

  OpqPacket_Heartbeat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpqPacket_Heartbeat& from);
  void MergeFrom(const OpqPacket_Heartbeat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpqPacket_Heartbeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OpqPacket.DeviceId deviceId = 1;
  bool has_deviceid() const;
  void clear_deviceid();
  static const int kDeviceIdFieldNumber = 1;
  const ::OpqPacket_DeviceId& deviceid() const;
  ::OpqPacket_DeviceId* mutable_deviceid();
  ::OpqPacket_DeviceId* release_deviceid();
  void set_allocated_deviceid(::OpqPacket_DeviceId* deviceid);

  // optional double rms = 2;
  bool has_rms() const;
  void clear_rms();
  static const int kRmsFieldNumber = 2;
  double rms() const;
  void set_rms(double value);

  // optional double frequency = 3;
  bool has_frequency() const;
  void clear_frequency();
  static const int kFrequencyFieldNumber = 3;
  double frequency() const;
  void set_frequency(double value);

  // optional double thd = 4;
  bool has_thd() const;
  void clear_thd();
  static const int kThdFieldNumber = 4;
  double thd() const;
  void set_thd(double value);

  // repeated uint64 synch = 5;
  int synch_size() const;
  void clear_synch();
  static const int kSynchFieldNumber = 5;
  ::google::protobuf::uint64 synch(int index) const;
  void set_synch(int index, ::google::protobuf::uint64 value);
  void add_synch(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      synch() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_synch();

  // @@protoc_insertion_point(class_scope:OpqPacket.Heartbeat)
 private:
  inline void set_has_deviceid();
  inline void clear_has_deviceid();
  inline void set_has_rms();
  inline void clear_has_rms();
  inline void set_has_frequency();
  inline void clear_has_frequency();
  inline void set_has_thd();
  inline void clear_has_thd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::OpqPacket_DeviceId* deviceid_;
  double rms_;
  double frequency_;
  double thd_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > synch_;
  friend void  protobuf_AddDesc_OpqProtocol_2eproto();
  friend void protobuf_AssignDesc_OpqProtocol_2eproto();
  friend void protobuf_ShutdownFile_OpqProtocol_2eproto();

  void InitAsDefaultInstance();
  static OpqPacket_Heartbeat* default_instance_;
};
// -------------------------------------------------------------------

class OpqPacket_Cmd : public ::google::protobuf::Message {
 public:
  OpqPacket_Cmd();
  virtual ~OpqPacket_Cmd();

  OpqPacket_Cmd(const OpqPacket_Cmd& from);

  inline OpqPacket_Cmd& operator=(const OpqPacket_Cmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpqPacket_Cmd& default_instance();

  void Swap(OpqPacket_Cmd* other);

  // implements Message ----------------------------------------------

  inline OpqPacket_Cmd* New() const { return New(NULL); }

  OpqPacket_Cmd* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpqPacket_Cmd& from);
  void MergeFrom(const OpqPacket_Cmd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpqPacket_Cmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OpqPacket.DeviceId id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::OpqPacket_DeviceId& id() const;
  ::OpqPacket_DeviceId* mutable_id();
  ::OpqPacket_DeviceId* release_id();
  void set_allocated_id(::OpqPacket_DeviceId* id);

  // optional .OpqPacket.CmdType cmdType = 2;
  bool has_cmdtype() const;
  void clear_cmdtype();
  static const int kCmdTypeFieldNumber = 2;
  ::OpqPacket_CmdType cmdtype() const;
  void set_cmdtype(::OpqPacket_CmdType value);

  // optional string message = 3;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:OpqPacket.Cmd)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_cmdtype();
  inline void clear_has_cmdtype();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::OpqPacket_DeviceId* id_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  int cmdtype_;
  friend void  protobuf_AddDesc_OpqProtocol_2eproto();
  friend void protobuf_AssignDesc_OpqProtocol_2eproto();
  friend void protobuf_ShutdownFile_OpqProtocol_2eproto();

  void InitAsDefaultInstance();
  static OpqPacket_Cmd* default_instance_;
};
// -------------------------------------------------------------------

class OpqPacket_CmdResp : public ::google::protobuf::Message {
 public:
  OpqPacket_CmdResp();
  virtual ~OpqPacket_CmdResp();

  OpqPacket_CmdResp(const OpqPacket_CmdResp& from);

  inline OpqPacket_CmdResp& operator=(const OpqPacket_CmdResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpqPacket_CmdResp& default_instance();

  void Swap(OpqPacket_CmdResp* other);

  // implements Message ----------------------------------------------

  inline OpqPacket_CmdResp* New() const { return New(NULL); }

  OpqPacket_CmdResp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpqPacket_CmdResp& from);
  void MergeFrom(const OpqPacket_CmdResp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpqPacket_CmdResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OpqPacket.DeviceId id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::OpqPacket_DeviceId& id() const;
  ::OpqPacket_DeviceId* mutable_id();
  ::OpqPacket_DeviceId* release_id();
  void set_allocated_id(::OpqPacket_DeviceId* id);

  // optional string message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:OpqPacket.CmdResp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_message();
  inline void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::OpqPacket_DeviceId* id_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  friend void  protobuf_AddDesc_OpqProtocol_2eproto();
  friend void protobuf_AssignDesc_OpqProtocol_2eproto();
  friend void protobuf_ShutdownFile_OpqProtocol_2eproto();

  void InitAsDefaultInstance();
  static OpqPacket_CmdResp* default_instance_;
};
// -------------------------------------------------------------------

class OpqPacket_DeviceId : public ::google::protobuf::Message {
 public:
  OpqPacket_DeviceId();
  virtual ~OpqPacket_DeviceId();

  OpqPacket_DeviceId(const OpqPacket_DeviceId& from);

  inline OpqPacket_DeviceId& operator=(const OpqPacket_DeviceId& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpqPacket_DeviceId& default_instance();

  void Swap(OpqPacket_DeviceId* other);

  // implements Message ----------------------------------------------

  inline OpqPacket_DeviceId* New() const { return New(NULL); }

  OpqPacket_DeviceId* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpqPacket_DeviceId& from);
  void MergeFrom(const OpqPacket_DeviceId& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpqPacket_DeviceId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 deviceId = 1;
  bool has_deviceid() const;
  void clear_deviceid();
  static const int kDeviceIdFieldNumber = 1;
  ::google::protobuf::int64 deviceid() const;
  void set_deviceid(::google::protobuf::int64 value);

  // optional string deviceKey = 2;
  bool has_devicekey() const;
  void clear_devicekey();
  static const int kDeviceKeyFieldNumber = 2;
  const ::std::string& devicekey() const;
  void set_devicekey(const ::std::string& value);
  void set_devicekey(const char* value);
  void set_devicekey(const char* value, size_t size);
  ::std::string* mutable_devicekey();
  ::std::string* release_devicekey();
  void set_allocated_devicekey(::std::string* devicekey);

  // @@protoc_insertion_point(class_scope:OpqPacket.DeviceId)
 private:
  inline void set_has_deviceid();
  inline void clear_has_deviceid();
  inline void set_has_devicekey();
  inline void clear_has_devicekey();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 deviceid_;
  ::google::protobuf::internal::ArenaStringPtr devicekey_;
  friend void  protobuf_AddDesc_OpqProtocol_2eproto();
  friend void protobuf_AssignDesc_OpqProtocol_2eproto();
  friend void protobuf_ShutdownFile_OpqProtocol_2eproto();

  void InitAsDefaultInstance();
  static OpqPacket_DeviceId* default_instance_;
};
// -------------------------------------------------------------------

class OpqPacket : public ::google::protobuf::Message {
 public:
  OpqPacket();
  virtual ~OpqPacket();

  OpqPacket(const OpqPacket& from);

  inline OpqPacket& operator=(const OpqPacket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpqPacket& default_instance();

  enum PacketTypeCase {
    kEvent = 1,
    kHeartbeat = 2,
    kCmd = 3,
    kCmdResp = 4,
    PACKETTYPE_NOT_SET = 0,
  };

  void Swap(OpqPacket* other);

  // implements Message ----------------------------------------------

  inline OpqPacket* New() const { return New(NULL); }

  OpqPacket* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpqPacket& from);
  void MergeFrom(const OpqPacket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpqPacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef OpqPacket_Event Event;
  typedef OpqPacket_Heartbeat Heartbeat;
  typedef OpqPacket_Cmd Cmd;
  typedef OpqPacket_CmdResp CmdResp;
  typedef OpqPacket_DeviceId DeviceId;

  typedef OpqPacket_EventType EventType;
  static const EventType FREQUENCY = OpqPacket_EventType_FREQUENCY;
  static const EventType VOLTAGE = OpqPacket_EventType_VOLTAGE;
  static const EventType THD = OpqPacket_EventType_THD;
  static inline bool EventType_IsValid(int value) {
    return OpqPacket_EventType_IsValid(value);
  }
  static const EventType EventType_MIN =
    OpqPacket_EventType_EventType_MIN;
  static const EventType EventType_MAX =
    OpqPacket_EventType_EventType_MAX;
  static const int EventType_ARRAYSIZE =
    OpqPacket_EventType_EventType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EventType_descriptor() {
    return OpqPacket_EventType_descriptor();
  }
  static inline const ::std::string& EventType_Name(EventType value) {
    return OpqPacket_EventType_Name(value);
  }
  static inline bool EventType_Parse(const ::std::string& name,
      EventType* value) {
    return OpqPacket_EventType_Parse(name, value);
  }

  typedef OpqPacket_CmdType CmdType;
  static const CmdType KILL_SERVER = OpqPacket_CmdType_KILL_SERVER;
  static const CmdType RESTART_DEVICE = OpqPacket_CmdType_RESTART_DEVICE;
  static const CmdType GET_REGISTER_MAP = OpqPacket_CmdType_GET_REGISTER_MAP;
  static const CmdType RUN_DIAGNOSTICS = OpqPacket_CmdType_RUN_DIAGNOSTICS;
  static inline bool CmdType_IsValid(int value) {
    return OpqPacket_CmdType_IsValid(value);
  }
  static const CmdType CmdType_MIN =
    OpqPacket_CmdType_CmdType_MIN;
  static const CmdType CmdType_MAX =
    OpqPacket_CmdType_CmdType_MAX;
  static const int CmdType_ARRAYSIZE =
    OpqPacket_CmdType_CmdType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdType_descriptor() {
    return OpqPacket_CmdType_descriptor();
  }
  static inline const ::std::string& CmdType_Name(CmdType value) {
    return OpqPacket_CmdType_Name(value);
  }
  static inline bool CmdType_Parse(const ::std::string& name,
      CmdType* value) {
    return OpqPacket_CmdType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .OpqPacket.Event event = 1;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 1;
  const ::OpqPacket_Event& event() const;
  ::OpqPacket_Event* mutable_event();
  ::OpqPacket_Event* release_event();
  void set_allocated_event(::OpqPacket_Event* event);

  // optional .OpqPacket.Heartbeat heartbeat = 2;
  bool has_heartbeat() const;
  void clear_heartbeat();
  static const int kHeartbeatFieldNumber = 2;
  const ::OpqPacket_Heartbeat& heartbeat() const;
  ::OpqPacket_Heartbeat* mutable_heartbeat();
  ::OpqPacket_Heartbeat* release_heartbeat();
  void set_allocated_heartbeat(::OpqPacket_Heartbeat* heartbeat);

  // optional .OpqPacket.Cmd cmd = 3;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 3;
  const ::OpqPacket_Cmd& cmd() const;
  ::OpqPacket_Cmd* mutable_cmd();
  ::OpqPacket_Cmd* release_cmd();
  void set_allocated_cmd(::OpqPacket_Cmd* cmd);

  // optional .OpqPacket.CmdResp cmdResp = 4;
  bool has_cmdresp() const;
  void clear_cmdresp();
  static const int kCmdRespFieldNumber = 4;
  const ::OpqPacket_CmdResp& cmdresp() const;
  ::OpqPacket_CmdResp* mutable_cmdresp();
  ::OpqPacket_CmdResp* release_cmdresp();
  void set_allocated_cmdresp(::OpqPacket_CmdResp* cmdresp);

  PacketTypeCase PacketType_case() const;
  // @@protoc_insertion_point(class_scope:OpqPacket)
 private:
  inline void set_has_event();
  inline void set_has_heartbeat();
  inline void set_has_cmd();
  inline void set_has_cmdresp();

  inline bool has_PacketType() const;
  void clear_PacketType();
  inline void clear_has_PacketType();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  union PacketTypeUnion {
    PacketTypeUnion() {}
    ::OpqPacket_Event* event_;
    ::OpqPacket_Heartbeat* heartbeat_;
    ::OpqPacket_Cmd* cmd_;
    ::OpqPacket_CmdResp* cmdresp_;
  } PacketType_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_OpqProtocol_2eproto();
  friend void protobuf_AssignDesc_OpqProtocol_2eproto();
  friend void protobuf_ShutdownFile_OpqProtocol_2eproto();

  void InitAsDefaultInstance();
  static OpqPacket* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// OpqPacket_Event

// optional .OpqPacket.DeviceId id = 1;
inline bool OpqPacket_Event::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpqPacket_Event::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpqPacket_Event::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpqPacket_Event::clear_id() {
  if (id_ != NULL) id_->::OpqPacket_DeviceId::Clear();
  clear_has_id();
}
inline const ::OpqPacket_DeviceId& OpqPacket_Event::id() const {
  // @@protoc_insertion_point(field_get:OpqPacket.Event.id)
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
inline ::OpqPacket_DeviceId* OpqPacket_Event::mutable_id() {
  set_has_id();
  if (id_ == NULL) {
    id_ = new ::OpqPacket_DeviceId;
  }
  // @@protoc_insertion_point(field_mutable:OpqPacket.Event.id)
  return id_;
}
inline ::OpqPacket_DeviceId* OpqPacket_Event::release_id() {
  clear_has_id();
  ::OpqPacket_DeviceId* temp = id_;
  id_ = NULL;
  return temp;
}
inline void OpqPacket_Event::set_allocated_id(::OpqPacket_DeviceId* id) {
  delete id_;
  id_ = id;
  if (id) {
    set_has_id();
  } else {
    clear_has_id();
  }
  // @@protoc_insertion_point(field_set_allocated:OpqPacket.Event.id)
}

// optional int32 secondsSinceEpoch = 2;
inline bool OpqPacket_Event::has_secondssinceepoch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OpqPacket_Event::set_has_secondssinceepoch() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OpqPacket_Event::clear_has_secondssinceepoch() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OpqPacket_Event::clear_secondssinceepoch() {
  secondssinceepoch_ = 0;
  clear_has_secondssinceepoch();
}
inline ::google::protobuf::int32 OpqPacket_Event::secondssinceepoch() const {
  // @@protoc_insertion_point(field_get:OpqPacket.Event.secondsSinceEpoch)
  return secondssinceepoch_;
}
inline void OpqPacket_Event::set_secondssinceepoch(::google::protobuf::int32 value) {
  set_has_secondssinceepoch();
  secondssinceepoch_ = value;
  // @@protoc_insertion_point(field_set:OpqPacket.Event.secondsSinceEpoch)
}

// optional int32 cyclcesSinceSecond = 3;
inline bool OpqPacket_Event::has_cyclcessincesecond() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OpqPacket_Event::set_has_cyclcessincesecond() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OpqPacket_Event::clear_has_cyclcessincesecond() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OpqPacket_Event::clear_cyclcessincesecond() {
  cyclcessincesecond_ = 0;
  clear_has_cyclcessincesecond();
}
inline ::google::protobuf::int32 OpqPacket_Event::cyclcessincesecond() const {
  // @@protoc_insertion_point(field_get:OpqPacket.Event.cyclcesSinceSecond)
  return cyclcessincesecond_;
}
inline void OpqPacket_Event::set_cyclcessincesecond(::google::protobuf::int32 value) {
  set_has_cyclcessincesecond();
  cyclcessincesecond_ = value;
  // @@protoc_insertion_point(field_set:OpqPacket.Event.cyclcesSinceSecond)
}

// optional .OpqPacket.EventType eventType = 4;
inline bool OpqPacket_Event::has_eventtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OpqPacket_Event::set_has_eventtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OpqPacket_Event::clear_has_eventtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OpqPacket_Event::clear_eventtype() {
  eventtype_ = 0;
  clear_has_eventtype();
}
inline ::OpqPacket_EventType OpqPacket_Event::eventtype() const {
  // @@protoc_insertion_point(field_get:OpqPacket.Event.eventType)
  return static_cast< ::OpqPacket_EventType >(eventtype_);
}
inline void OpqPacket_Event::set_eventtype(::OpqPacket_EventType value) {
  assert(::OpqPacket_EventType_IsValid(value));
  set_has_eventtype();
  eventtype_ = value;
  // @@protoc_insertion_point(field_set:OpqPacket.Event.eventType)
}

// repeated int32 waveform = 5;
inline int OpqPacket_Event::waveform_size() const {
  return waveform_.size();
}
inline void OpqPacket_Event::clear_waveform() {
  waveform_.Clear();
}
inline ::google::protobuf::int32 OpqPacket_Event::waveform(int index) const {
  // @@protoc_insertion_point(field_get:OpqPacket.Event.waveform)
  return waveform_.Get(index);
}
inline void OpqPacket_Event::set_waveform(int index, ::google::protobuf::int32 value) {
  waveform_.Set(index, value);
  // @@protoc_insertion_point(field_set:OpqPacket.Event.waveform)
}
inline void OpqPacket_Event::add_waveform(::google::protobuf::int32 value) {
  waveform_.Add(value);
  // @@protoc_insertion_point(field_add:OpqPacket.Event.waveform)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
OpqPacket_Event::waveform() const {
  // @@protoc_insertion_point(field_list:OpqPacket.Event.waveform)
  return waveform_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
OpqPacket_Event::mutable_waveform() {
  // @@protoc_insertion_point(field_mutable_list:OpqPacket.Event.waveform)
  return &waveform_;
}

// -------------------------------------------------------------------

// OpqPacket_Heartbeat

// optional .OpqPacket.DeviceId deviceId = 1;
inline bool OpqPacket_Heartbeat::has_deviceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpqPacket_Heartbeat::set_has_deviceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpqPacket_Heartbeat::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpqPacket_Heartbeat::clear_deviceid() {
  if (deviceid_ != NULL) deviceid_->::OpqPacket_DeviceId::Clear();
  clear_has_deviceid();
}
inline const ::OpqPacket_DeviceId& OpqPacket_Heartbeat::deviceid() const {
  // @@protoc_insertion_point(field_get:OpqPacket.Heartbeat.deviceId)
  return deviceid_ != NULL ? *deviceid_ : *default_instance_->deviceid_;
}
inline ::OpqPacket_DeviceId* OpqPacket_Heartbeat::mutable_deviceid() {
  set_has_deviceid();
  if (deviceid_ == NULL) {
    deviceid_ = new ::OpqPacket_DeviceId;
  }
  // @@protoc_insertion_point(field_mutable:OpqPacket.Heartbeat.deviceId)
  return deviceid_;
}
inline ::OpqPacket_DeviceId* OpqPacket_Heartbeat::release_deviceid() {
  clear_has_deviceid();
  ::OpqPacket_DeviceId* temp = deviceid_;
  deviceid_ = NULL;
  return temp;
}
inline void OpqPacket_Heartbeat::set_allocated_deviceid(::OpqPacket_DeviceId* deviceid) {
  delete deviceid_;
  deviceid_ = deviceid;
  if (deviceid) {
    set_has_deviceid();
  } else {
    clear_has_deviceid();
  }
  // @@protoc_insertion_point(field_set_allocated:OpqPacket.Heartbeat.deviceId)
}

// optional double rms = 2;
inline bool OpqPacket_Heartbeat::has_rms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OpqPacket_Heartbeat::set_has_rms() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OpqPacket_Heartbeat::clear_has_rms() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OpqPacket_Heartbeat::clear_rms() {
  rms_ = 0;
  clear_has_rms();
}
inline double OpqPacket_Heartbeat::rms() const {
  // @@protoc_insertion_point(field_get:OpqPacket.Heartbeat.rms)
  return rms_;
}
inline void OpqPacket_Heartbeat::set_rms(double value) {
  set_has_rms();
  rms_ = value;
  // @@protoc_insertion_point(field_set:OpqPacket.Heartbeat.rms)
}

// optional double frequency = 3;
inline bool OpqPacket_Heartbeat::has_frequency() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OpqPacket_Heartbeat::set_has_frequency() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OpqPacket_Heartbeat::clear_has_frequency() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OpqPacket_Heartbeat::clear_frequency() {
  frequency_ = 0;
  clear_has_frequency();
}
inline double OpqPacket_Heartbeat::frequency() const {
  // @@protoc_insertion_point(field_get:OpqPacket.Heartbeat.frequency)
  return frequency_;
}
inline void OpqPacket_Heartbeat::set_frequency(double value) {
  set_has_frequency();
  frequency_ = value;
  // @@protoc_insertion_point(field_set:OpqPacket.Heartbeat.frequency)
}

// optional double thd = 4;
inline bool OpqPacket_Heartbeat::has_thd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OpqPacket_Heartbeat::set_has_thd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OpqPacket_Heartbeat::clear_has_thd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OpqPacket_Heartbeat::clear_thd() {
  thd_ = 0;
  clear_has_thd();
}
inline double OpqPacket_Heartbeat::thd() const {
  // @@protoc_insertion_point(field_get:OpqPacket.Heartbeat.thd)
  return thd_;
}
inline void OpqPacket_Heartbeat::set_thd(double value) {
  set_has_thd();
  thd_ = value;
  // @@protoc_insertion_point(field_set:OpqPacket.Heartbeat.thd)
}

// repeated uint64 synch = 5;
inline int OpqPacket_Heartbeat::synch_size() const {
  return synch_.size();
}
inline void OpqPacket_Heartbeat::clear_synch() {
  synch_.Clear();
}
inline ::google::protobuf::uint64 OpqPacket_Heartbeat::synch(int index) const {
  // @@protoc_insertion_point(field_get:OpqPacket.Heartbeat.synch)
  return synch_.Get(index);
}
inline void OpqPacket_Heartbeat::set_synch(int index, ::google::protobuf::uint64 value) {
  synch_.Set(index, value);
  // @@protoc_insertion_point(field_set:OpqPacket.Heartbeat.synch)
}
inline void OpqPacket_Heartbeat::add_synch(::google::protobuf::uint64 value) {
  synch_.Add(value);
  // @@protoc_insertion_point(field_add:OpqPacket.Heartbeat.synch)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
OpqPacket_Heartbeat::synch() const {
  // @@protoc_insertion_point(field_list:OpqPacket.Heartbeat.synch)
  return synch_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
OpqPacket_Heartbeat::mutable_synch() {
  // @@protoc_insertion_point(field_mutable_list:OpqPacket.Heartbeat.synch)
  return &synch_;
}

// -------------------------------------------------------------------

// OpqPacket_Cmd

// optional .OpqPacket.DeviceId id = 1;
inline bool OpqPacket_Cmd::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpqPacket_Cmd::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpqPacket_Cmd::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpqPacket_Cmd::clear_id() {
  if (id_ != NULL) id_->::OpqPacket_DeviceId::Clear();
  clear_has_id();
}
inline const ::OpqPacket_DeviceId& OpqPacket_Cmd::id() const {
  // @@protoc_insertion_point(field_get:OpqPacket.Cmd.id)
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
inline ::OpqPacket_DeviceId* OpqPacket_Cmd::mutable_id() {
  set_has_id();
  if (id_ == NULL) {
    id_ = new ::OpqPacket_DeviceId;
  }
  // @@protoc_insertion_point(field_mutable:OpqPacket.Cmd.id)
  return id_;
}
inline ::OpqPacket_DeviceId* OpqPacket_Cmd::release_id() {
  clear_has_id();
  ::OpqPacket_DeviceId* temp = id_;
  id_ = NULL;
  return temp;
}
inline void OpqPacket_Cmd::set_allocated_id(::OpqPacket_DeviceId* id) {
  delete id_;
  id_ = id;
  if (id) {
    set_has_id();
  } else {
    clear_has_id();
  }
  // @@protoc_insertion_point(field_set_allocated:OpqPacket.Cmd.id)
}

// optional .OpqPacket.CmdType cmdType = 2;
inline bool OpqPacket_Cmd::has_cmdtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OpqPacket_Cmd::set_has_cmdtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OpqPacket_Cmd::clear_has_cmdtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OpqPacket_Cmd::clear_cmdtype() {
  cmdtype_ = 0;
  clear_has_cmdtype();
}
inline ::OpqPacket_CmdType OpqPacket_Cmd::cmdtype() const {
  // @@protoc_insertion_point(field_get:OpqPacket.Cmd.cmdType)
  return static_cast< ::OpqPacket_CmdType >(cmdtype_);
}
inline void OpqPacket_Cmd::set_cmdtype(::OpqPacket_CmdType value) {
  assert(::OpqPacket_CmdType_IsValid(value));
  set_has_cmdtype();
  cmdtype_ = value;
  // @@protoc_insertion_point(field_set:OpqPacket.Cmd.cmdType)
}

// optional string message = 3;
inline bool OpqPacket_Cmd::has_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OpqPacket_Cmd::set_has_message() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OpqPacket_Cmd::clear_has_message() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OpqPacket_Cmd::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& OpqPacket_Cmd::message() const {
  // @@protoc_insertion_point(field_get:OpqPacket.Cmd.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpqPacket_Cmd::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OpqPacket.Cmd.message)
}
inline void OpqPacket_Cmd::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OpqPacket.Cmd.message)
}
inline void OpqPacket_Cmd::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OpqPacket.Cmd.message)
}
inline ::std::string* OpqPacket_Cmd::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:OpqPacket.Cmd.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpqPacket_Cmd::release_message() {
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpqPacket_Cmd::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:OpqPacket.Cmd.message)
}

// -------------------------------------------------------------------

// OpqPacket_CmdResp

// optional .OpqPacket.DeviceId id = 1;
inline bool OpqPacket_CmdResp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpqPacket_CmdResp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpqPacket_CmdResp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpqPacket_CmdResp::clear_id() {
  if (id_ != NULL) id_->::OpqPacket_DeviceId::Clear();
  clear_has_id();
}
inline const ::OpqPacket_DeviceId& OpqPacket_CmdResp::id() const {
  // @@protoc_insertion_point(field_get:OpqPacket.CmdResp.id)
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
inline ::OpqPacket_DeviceId* OpqPacket_CmdResp::mutable_id() {
  set_has_id();
  if (id_ == NULL) {
    id_ = new ::OpqPacket_DeviceId;
  }
  // @@protoc_insertion_point(field_mutable:OpqPacket.CmdResp.id)
  return id_;
}
inline ::OpqPacket_DeviceId* OpqPacket_CmdResp::release_id() {
  clear_has_id();
  ::OpqPacket_DeviceId* temp = id_;
  id_ = NULL;
  return temp;
}
inline void OpqPacket_CmdResp::set_allocated_id(::OpqPacket_DeviceId* id) {
  delete id_;
  id_ = id;
  if (id) {
    set_has_id();
  } else {
    clear_has_id();
  }
  // @@protoc_insertion_point(field_set_allocated:OpqPacket.CmdResp.id)
}

// optional string message = 2;
inline bool OpqPacket_CmdResp::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OpqPacket_CmdResp::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OpqPacket_CmdResp::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OpqPacket_CmdResp::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& OpqPacket_CmdResp::message() const {
  // @@protoc_insertion_point(field_get:OpqPacket.CmdResp.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpqPacket_CmdResp::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OpqPacket.CmdResp.message)
}
inline void OpqPacket_CmdResp::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OpqPacket.CmdResp.message)
}
inline void OpqPacket_CmdResp::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OpqPacket.CmdResp.message)
}
inline ::std::string* OpqPacket_CmdResp::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:OpqPacket.CmdResp.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpqPacket_CmdResp::release_message() {
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpqPacket_CmdResp::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:OpqPacket.CmdResp.message)
}

// -------------------------------------------------------------------

// OpqPacket_DeviceId

// optional int64 deviceId = 1;
inline bool OpqPacket_DeviceId::has_deviceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpqPacket_DeviceId::set_has_deviceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpqPacket_DeviceId::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpqPacket_DeviceId::clear_deviceid() {
  deviceid_ = GOOGLE_LONGLONG(0);
  clear_has_deviceid();
}
inline ::google::protobuf::int64 OpqPacket_DeviceId::deviceid() const {
  // @@protoc_insertion_point(field_get:OpqPacket.DeviceId.deviceId)
  return deviceid_;
}
inline void OpqPacket_DeviceId::set_deviceid(::google::protobuf::int64 value) {
  set_has_deviceid();
  deviceid_ = value;
  // @@protoc_insertion_point(field_set:OpqPacket.DeviceId.deviceId)
}

// optional string deviceKey = 2;
inline bool OpqPacket_DeviceId::has_devicekey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OpqPacket_DeviceId::set_has_devicekey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OpqPacket_DeviceId::clear_has_devicekey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OpqPacket_DeviceId::clear_devicekey() {
  devicekey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devicekey();
}
inline const ::std::string& OpqPacket_DeviceId::devicekey() const {
  // @@protoc_insertion_point(field_get:OpqPacket.DeviceId.deviceKey)
  return devicekey_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpqPacket_DeviceId::set_devicekey(const ::std::string& value) {
  set_has_devicekey();
  devicekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OpqPacket.DeviceId.deviceKey)
}
inline void OpqPacket_DeviceId::set_devicekey(const char* value) {
  set_has_devicekey();
  devicekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OpqPacket.DeviceId.deviceKey)
}
inline void OpqPacket_DeviceId::set_devicekey(const char* value, size_t size) {
  set_has_devicekey();
  devicekey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OpqPacket.DeviceId.deviceKey)
}
inline ::std::string* OpqPacket_DeviceId::mutable_devicekey() {
  set_has_devicekey();
  // @@protoc_insertion_point(field_mutable:OpqPacket.DeviceId.deviceKey)
  return devicekey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpqPacket_DeviceId::release_devicekey() {
  clear_has_devicekey();
  return devicekey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpqPacket_DeviceId::set_allocated_devicekey(::std::string* devicekey) {
  if (devicekey != NULL) {
    set_has_devicekey();
  } else {
    clear_has_devicekey();
  }
  devicekey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicekey);
  // @@protoc_insertion_point(field_set_allocated:OpqPacket.DeviceId.deviceKey)
}

// -------------------------------------------------------------------

// OpqPacket

// optional .OpqPacket.Event event = 1;
inline bool OpqPacket::has_event() const {
  return PacketType_case() == kEvent;
}
inline void OpqPacket::set_has_event() {
  _oneof_case_[0] = kEvent;
}
inline void OpqPacket::clear_event() {
  if (has_event()) {
    delete PacketType_.event_;
    clear_has_PacketType();
  }
}
inline const ::OpqPacket_Event& OpqPacket::event() const {
  // @@protoc_insertion_point(field_get:OpqPacket.event)
  return has_event() ? *PacketType_.event_
                      : ::OpqPacket_Event::default_instance();
}
inline ::OpqPacket_Event* OpqPacket::mutable_event() {
  if (!has_event()) {
    clear_PacketType();
    set_has_event();
    PacketType_.event_ = new ::OpqPacket_Event;
  }
  // @@protoc_insertion_point(field_mutable:OpqPacket.event)
  return PacketType_.event_;
}
inline ::OpqPacket_Event* OpqPacket::release_event() {
  if (has_event()) {
    clear_has_PacketType();
    ::OpqPacket_Event* temp = PacketType_.event_;
    PacketType_.event_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OpqPacket::set_allocated_event(::OpqPacket_Event* event) {
  clear_PacketType();
  if (event) {
    set_has_event();
    PacketType_.event_ = event;
  }
  // @@protoc_insertion_point(field_set_allocated:OpqPacket.event)
}

// optional .OpqPacket.Heartbeat heartbeat = 2;
inline bool OpqPacket::has_heartbeat() const {
  return PacketType_case() == kHeartbeat;
}
inline void OpqPacket::set_has_heartbeat() {
  _oneof_case_[0] = kHeartbeat;
}
inline void OpqPacket::clear_heartbeat() {
  if (has_heartbeat()) {
    delete PacketType_.heartbeat_;
    clear_has_PacketType();
  }
}
inline const ::OpqPacket_Heartbeat& OpqPacket::heartbeat() const {
  // @@protoc_insertion_point(field_get:OpqPacket.heartbeat)
  return has_heartbeat() ? *PacketType_.heartbeat_
                      : ::OpqPacket_Heartbeat::default_instance();
}
inline ::OpqPacket_Heartbeat* OpqPacket::mutable_heartbeat() {
  if (!has_heartbeat()) {
    clear_PacketType();
    set_has_heartbeat();
    PacketType_.heartbeat_ = new ::OpqPacket_Heartbeat;
  }
  // @@protoc_insertion_point(field_mutable:OpqPacket.heartbeat)
  return PacketType_.heartbeat_;
}
inline ::OpqPacket_Heartbeat* OpqPacket::release_heartbeat() {
  if (has_heartbeat()) {
    clear_has_PacketType();
    ::OpqPacket_Heartbeat* temp = PacketType_.heartbeat_;
    PacketType_.heartbeat_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OpqPacket::set_allocated_heartbeat(::OpqPacket_Heartbeat* heartbeat) {
  clear_PacketType();
  if (heartbeat) {
    set_has_heartbeat();
    PacketType_.heartbeat_ = heartbeat;
  }
  // @@protoc_insertion_point(field_set_allocated:OpqPacket.heartbeat)
}

// optional .OpqPacket.Cmd cmd = 3;
inline bool OpqPacket::has_cmd() const {
  return PacketType_case() == kCmd;
}
inline void OpqPacket::set_has_cmd() {
  _oneof_case_[0] = kCmd;
}
inline void OpqPacket::clear_cmd() {
  if (has_cmd()) {
    delete PacketType_.cmd_;
    clear_has_PacketType();
  }
}
inline const ::OpqPacket_Cmd& OpqPacket::cmd() const {
  // @@protoc_insertion_point(field_get:OpqPacket.cmd)
  return has_cmd() ? *PacketType_.cmd_
                      : ::OpqPacket_Cmd::default_instance();
}
inline ::OpqPacket_Cmd* OpqPacket::mutable_cmd() {
  if (!has_cmd()) {
    clear_PacketType();
    set_has_cmd();
    PacketType_.cmd_ = new ::OpqPacket_Cmd;
  }
  // @@protoc_insertion_point(field_mutable:OpqPacket.cmd)
  return PacketType_.cmd_;
}
inline ::OpqPacket_Cmd* OpqPacket::release_cmd() {
  if (has_cmd()) {
    clear_has_PacketType();
    ::OpqPacket_Cmd* temp = PacketType_.cmd_;
    PacketType_.cmd_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OpqPacket::set_allocated_cmd(::OpqPacket_Cmd* cmd) {
  clear_PacketType();
  if (cmd) {
    set_has_cmd();
    PacketType_.cmd_ = cmd;
  }
  // @@protoc_insertion_point(field_set_allocated:OpqPacket.cmd)
}

// optional .OpqPacket.CmdResp cmdResp = 4;
inline bool OpqPacket::has_cmdresp() const {
  return PacketType_case() == kCmdResp;
}
inline void OpqPacket::set_has_cmdresp() {
  _oneof_case_[0] = kCmdResp;
}
inline void OpqPacket::clear_cmdresp() {
  if (has_cmdresp()) {
    delete PacketType_.cmdresp_;
    clear_has_PacketType();
  }
}
inline const ::OpqPacket_CmdResp& OpqPacket::cmdresp() const {
  // @@protoc_insertion_point(field_get:OpqPacket.cmdResp)
  return has_cmdresp() ? *PacketType_.cmdresp_
                      : ::OpqPacket_CmdResp::default_instance();
}
inline ::OpqPacket_CmdResp* OpqPacket::mutable_cmdresp() {
  if (!has_cmdresp()) {
    clear_PacketType();
    set_has_cmdresp();
    PacketType_.cmdresp_ = new ::OpqPacket_CmdResp;
  }
  // @@protoc_insertion_point(field_mutable:OpqPacket.cmdResp)
  return PacketType_.cmdresp_;
}
inline ::OpqPacket_CmdResp* OpqPacket::release_cmdresp() {
  if (has_cmdresp()) {
    clear_has_PacketType();
    ::OpqPacket_CmdResp* temp = PacketType_.cmdresp_;
    PacketType_.cmdresp_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OpqPacket::set_allocated_cmdresp(::OpqPacket_CmdResp* cmdresp) {
  clear_PacketType();
  if (cmdresp) {
    set_has_cmdresp();
    PacketType_.cmdresp_ = cmdresp;
  }
  // @@protoc_insertion_point(field_set_allocated:OpqPacket.cmdResp)
}

inline bool OpqPacket::has_PacketType() const {
  return PacketType_case() != PACKETTYPE_NOT_SET;
}
inline void OpqPacket::clear_has_PacketType() {
  _oneof_case_[0] = PACKETTYPE_NOT_SET;
}
inline OpqPacket::PacketTypeCase OpqPacket::PacketType_case() const {
  return OpqPacket::PacketTypeCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::OpqPacket_EventType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OpqPacket_EventType>() {
  return ::OpqPacket_EventType_descriptor();
}
template <> struct is_proto_enum< ::OpqPacket_CmdType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OpqPacket_CmdType>() {
  return ::OpqPacket_CmdType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_OpqProtocol_2eproto__INCLUDED
